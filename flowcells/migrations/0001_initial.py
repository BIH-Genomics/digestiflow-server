# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-12-06 06:41
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("sequencers", "0001_initial"),
        ("projectroles", "0006_add_remote_projects"),
    ]

    operations = [
        migrations.CreateModel(
            name="FlowCell",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, help_text="DateTime of last modification"),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, help_text="Barcodeset SODAR UUID", unique=True
                    ),
                ),
                ("run_date", models.DateField()),
                ("run_number", models.PositiveIntegerField()),
                ("slot", models.CharField(max_length=1)),
                ("vendor_id", models.CharField(max_length=40)),
                ("label", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "manual_label",
                    models.CharField(
                        blank=True,
                        help_text="Manual label for overriding the one from the folder name",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Short description of the flow cell", null=True
                    ),
                ),
                (
                    "num_lanes",
                    models.IntegerField(
                        default=8,
                        help_text="Number of lanes on flowcell 8 for HiSeq, 4 for NextSeq",
                    ),
                ),
                ("operator", models.CharField(max_length=100, verbose_name="Sequencer Operator")),
                (
                    "rta_version",
                    models.IntegerField(
                        choices=[(1, "RTA v1"), (2, "RTA v2"), (0, "other")],
                        default=2,
                        help_text="Major RTA version, implies bcl2fastq version",
                    ),
                ),
                (
                    "status_sequencing",
                    models.CharField(
                        choices=[
                            ("initial", "not started"),
                            ("in_progress", "in progress"),
                            ("complete", "complete"),
                            ("complete_warnings", "complete with warnings"),
                            ("closed", "released"),
                            ("failed", "failed"),
                            ("canceled", "failured confirmed"),
                        ],
                        default="initial",
                        help_text="Choices for sequencing",
                        max_length=50,
                    ),
                ),
                (
                    "status_conversion",
                    models.CharField(
                        choices=[
                            ("initial", "keep unstarted"),
                            ("ready", "ready to start"),
                            ("in_progress", "in progress"),
                            ("complete", "complete"),
                            ("complete_warnings", "complete with warnings"),
                            ("failed", "failed"),
                            ("closed", "released"),
                            ("canceled", "failured confirmed"),
                            ("skipped", "skipped"),
                        ],
                        default="initial",
                        help_text="Choices for sequencing",
                        max_length=50,
                    ),
                ),
                (
                    "status_delivery",
                    models.CharField(
                        choices=[
                            ("initial", "not started"),
                            ("in_progress", "in progress"),
                            ("complete", "complete"),
                            ("complete_warnings", "complete with warnings"),
                            ("closed", "received"),
                            ("failed", "canceled"),
                            ("canceled", "canceled confirmed"),
                            ("skipped", "skipped"),
                        ],
                        default="initial",
                        help_text="Choices for sequencing",
                        max_length=50,
                    ),
                ),
                (
                    "delivery_type",
                    models.CharField(
                        choices=[
                            ("seq", "sequences"),
                            ("bcl", "base calls"),
                            ("seq_bcl", "sequences + base calls"),
                        ],
                        default="seq",
                        help_text="Choices for data delivery type",
                        max_length=50,
                    ),
                ),
                (
                    "planned_reads",
                    models.CharField(
                        blank=True,
                        help_text="Specification of the planned reads",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "current_reads",
                    models.CharField(
                        blank=True,
                        help_text="Specification of the current reads",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "barcode_mismatches",
                    models.PositiveSmallIntegerField(
                        blank=True, help_text="Number of mismatches to allow", null=True
                    ),
                ),
                (
                    "demux_operator",
                    models.ForeignKey(
                        blank=True,
                        help_text="User responsible for demultiplexing",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="demuxed_flowcells",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Demultiplexing Operator",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        help_text="Project in which this flow cell belongs",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projectroles.Project",
                    ),
                ),
                (
                    "sequencing_machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="sequencers.SequencingMachine",
                    ),
                ),
            ],
        )
    ]
